unit FCadastroClientes;

interface

uses
  Controller.Cliente,
  Data.DB,
  Datasnap.DBClient,
  Entidades.Cliente,
  System.Classes,
  System.Generics.Collections,
  System.SysUtils,
  System.Variants,
  Vcl.Controls,
  Vcl.DBGrids,
  Vcl.Dialogs,
  Vcl.ExtCtrls,
  Vcl.Forms,
  Vcl.Graphics,
  Vcl.Grids,
  Vcl.Mask,
  Vcl.StdCtrls,
  Winapi.Messages,
  Winapi.Windows;

type
  TfrmClientes = class(TForm)
    gbxCadastroCliente: TGroupBox;
    edtNome: TLabeledEdit;
    edtCidade: TLabeledEdit;
    edtUF: TLabeledEdit;
    pnlCadastro: TPanel;
    btnIncluir: TButton;
    btnAlterar: TButton;
    btnExcluir: TButton;
    btnVoltar: TButton;
    grdClientes: TDBGrid;
    dsClientes: TDataSource;
    cdsClientes: TClientDataSet;
    cdsClientesCodigo: TIntegerField;
    cdsClientesNome: TStringField;
    cdsClientesCidade: TStringField;
    cdsClientesUF: TStringField;
    btnCancelar: TButton;
    btnConfirmar: TButton;
    procedure FormCreate(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnVoltarClick(Sender: TObject);
    procedure btnConfirmarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
  private
    FController: TClienteController;
    procedure AtualizarGrid;
    procedure LimparCampos;
    function ClienteSelecionado: TCliente;

    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmClientes: TfrmClientes;

implementation

{$R *.dfm}

procedure TfrmClientes.AtualizarGrid;
begin
  var Lista := FController.ListarClientes;
  cdsClientes.Close;
  cdsClientes.FieldDefs.Clear;
  cdsClientes.FieldDefs.Add('Codigo', ftInteger);
  cdsClientes.FieldDefs.Add('Nome', ftString, 100);
  cdsClientes.FieldDefs.Add('Cidade', ftString, 100);
  cdsClientes.FieldDefs.Add('UF', ftString, 2);
  cdsClientes.CreateDataSet;

  for var Cliente in Lista do
  begin
    cdsClientes.Append;
    cdsClientes.FieldByName('Codigo').AsInteger := Cliente.Codigo;
    cdsClientes.FieldByName('Nome').AsString    := Cliente.Nome;
    cdsClientes.FieldByName('Cidade').AsString  := Cliente.Cidade;
    cdsClientes.FieldByName('UF').AsString      := Cliente.UF;
    cdsClientes.Post;
  end;
end;


procedure TfrmClientes.btnAlterarClick(Sender: TObject);
begin
  Tag := 2; // alterando
  gbxCadastroCliente.Visible := True;
  pnlCadastro.Enabled := False;
end;

procedure TfrmClientes.btnCancelarClick(Sender: TObject);
begin
  LimparCampos;
  AtualizarGrid;
  Tag := 0; // nada
  gbxCadastroCliente.Visible := False;
  pnlCadastro.Enabled := True;
end;

procedure TfrmClientes.btnConfirmarClick(Sender: TObject);
var
  Cliente : TCliente;
begin
  case Tag of
    1 : begin
          Cliente := TCliente.Create;
          Cliente.Nome := edtNome.Text;
          Cliente.Cidade := edtCidade.Text;
          Cliente.UF := edtUF.Text;
          FController.SalvarCliente(Cliente);
        end;
    2 : begin
          Cliente := ClienteSelecionado;
          if Assigned(Cliente) then
          begin
            Cliente.Nome := edtNome.Text;
            Cliente.Cidade := edtCidade.Text;
            Cliente.UF := edtUF.Text;
            FController.SalvarCliente(Cliente);
          end;
        end;
    3 : begin
          Cliente := ClienteSelecionado;
          if Assigned(Cliente) then
          begin
            FController.ExcluirCliente(Cliente.Codigo);
            AtualizarGrid;
          end;
        end;
  end;

  btnCancelarClick(Sender);
end;

procedure TfrmClientes.btnExcluirClick(Sender: TObject);
begin
  Tag := 3; // excluindo
  btnConfirmarClick(Sender);
end;

procedure TfrmClientes.btnIncluirClick(Sender: TObject);
begin
  Tag := 1; // incluindo
  gbxCadastroCliente.Visible := True;
  pnlCadastro.Enabled := False;
end;

procedure TfrmClientes.btnVoltarClick(Sender: TObject);
begin
  Close;
end;

function TfrmClientes.ClienteSelecionado: TCliente;
var
  Codigo: Integer;
  Lista: TObjectList<TCliente>;
begin
  Result := nil;
  if not cdsClientes.Active or cdsClientes.IsEmpty then
    Exit;

  Codigo := cdsClientes.FieldByName('cliCodigo').AsInteger;
  Lista := FController.ListarClientes;

  for var Cliente in Lista do
    if Cliente.Codigo = Codigo then
    begin
      Result := Cliente;
      Break;
    end;
end;

procedure TfrmClientes.FormCreate(Sender: TObject);
begin
  FController := TClienteController.Create;
  btnCancelarClick(Sender);
end;

procedure TfrmClientes.LimparCampos;
begin
  edtNome.Clear;
  edtCidade.Clear;
  edtUF.Clear;
end;

end.
