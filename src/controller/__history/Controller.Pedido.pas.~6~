unit Controller.Pedido;

interface

uses
  Entidades.ItemPedido,
  Entidades.Pedido,
  Service.Pedido,
  System.Generics.Collections;

type
  TPedidoController = class
  private
    FService: TPedidoService;
  public
    constructor Create;
    destructor Destroy; override;
    procedure CriarPedido(Pedido: TPedido; Itens: TObjectList<TItemPedido>);
    procedure ExcluirPedido(NumPedido: Integer);
    function ListarPedidos: TObjectList<TPedido>;
    function ListarItensDoPedido(NumPedido: Integer): TObjectList<TItemPedido>;
  end;

implementation

constructor TPedidoController.Create;
begin
  FService := TPedidoService.Create;
end;

procedure TPedidoController.CriarPedido(Pedido: TPedido; Itens: TObjectList<TItemPedido>);
begin
  FService.CriarPedido(Pedido, Itens);
end;

destructor TPedidoController.Destroy;
begin
  FService.Free;
  inherited;
end;

procedure TPedidoController.ExcluirPedido(Pedido: TPedido);
begin
  FService.ExcluirPedido(NumPedido);
end

function TPedidoController.ListarPedidos: TObjectList<TPedido>;
begin
  Result := FService.ObterTodosPedidos;
end;

function TPedidoController.ListarItensDoPedido(NumPedido: Integer): TObjectList<TItemPedido>;
begin
  Result := FService.ObterItensDoPedido(NumPedido);
end;

end.
