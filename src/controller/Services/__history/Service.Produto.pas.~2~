unit Service.Produto;

interface

uses
  Entidades.Produto,
  Factory.Repository,
  Persistencia.ORM,
  System.Generics.Collections;

type
  TProdutoService = class
  private
    FRepo: TPersistencia<TProduto>;
  public
    constructor Create;
    function ObterTodos: TObjectList<TProduto>;
    function ObterPorID(ID: Integer): TProduto;
    procedure Salvar(Produto: TProduto);
    procedure Excluir(ID: Integer);
  end;

implementation

{ TProdutoService }

constructor TProdutoService.Create;
begin
  FRepo := TRepositoryFactory.ProdutoRepository;
end;

function TProdutoService.ObterTodos: TObjectList<TProduto>;
begin
  Result := FRepo.ObterTodos;
end;

function TProdutoService.ObterPorID(ID: Integer): TProduto;
var
  Lista: TObjectList<TProduto>;
  Produto: TProduto;
begin
  Lista := FRepo.ObterTodos;

  try
    Result := nil;
    for Produto in Lista do
      if Produto.Codigo = ID then
        Exit(Produto);
  finally
    Lista.Free;
  end;
end;

procedure TProdutoService.Salvar(Produto: TProduto);
begin
  if Produto.Codigo = 0 then
    FRepo.Inserir(Produto)
  else
    FRepo.Atualizar(Produto);
end;

procedure TProdutoService.Excluir(ID: Integer);
var
  Produto: TProduto;
begin
  Produto := ObterPorID(ID);
  if Assigned(Produto) then
    FRepo.Excluir(Produto);
end;

end.
